[bpool]
recursive=no

[rpool]
recursive=no

# uncomment this if you have a swap partition
# [rpool/swap]
# use_template=nosnap

[template_nosnap]
frequently = 0
hourly = 0
daily = 0
weekly = 0
monthly = 0
yearly = 0

[template_default]

# for snapshots shorter than one hour, the period duration must be defined
# in minutes. Because they are executed within a full hour, the selected
# value should divide 60 minutes without remainder so taken snapshots
# are apart in equal intervals. Values larger than 59 aren't practical
# as only one snapshot will be taken on each full hour in this case.
# examples:
# frequent_period = 15 -> four snapshot each hour 15 minutes apart
# frequent_period = 5 -> twelve snapshots each hour 5 minutes apart
# frequent_period = 45 -> two snapshots each hour with different time gaps
# between them: 45 minutes and 15 minutes in this case
frequent_period = 15

# If any snapshot type is set to 0, we will not take snapshots for it - and will immediately
# prune any of those type snapshots already present.
#
# Otherwise, if autoprune is set, we will prune any snapshots of that type which are older
# than (setting * periodicity) - so if daily = 90, we'll prune any dailies older than 90 days.
autoprune = yes
frequently = 4
hourly = 48
daily = 30
weekly = 0
monthly = 6
yearly = 0
# pruning can be skipped based on the used capacity of the pool
# (0: always prune, 1-100: only prune if used capacity is greater than this value)
prune_defer = 0

# We will automatically take snapshots if autosnap is on, at the desired times configured
# below (or immediately, if we don't have one since the last preferred time for that type).
#
# Note that we will not take snapshots for a given type if that type is set to 0 above,
# regardless of the autosnap setting - for example, if yearly=0 we will not take yearlies
# even if we've defined a preferred time for yearlies and autosnap is on.
autosnap = 1
# hourly - top of the hour
hourly_min = 0
# daily - at 04:00 (most people expect a daily to contain everything done DURING that day)
daily_hour = 04
daily_min = 00
# weekly -at 04:00 each Sunday
weekly_wday = 0
weekly_hour = 04
weekly_min = 00
# monthly - 4am at the 1st day of the month (ie 04:00 of day 1)
monthly_mday = 1
monthly_hour = 04
monthly_min = 00
